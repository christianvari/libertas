{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["query","Blog","render","display_posts","_","orderBy","getPages","this","props","pageContext","pages","className","map","post","post_idx","key","get","to","withPrefix","src","alt","page","date_type","React","Component"],"mappings":"4QAUO,IAAMA,EAAK,aAQGC,E,gLACjBC,OAAA,WAAU,IAAD,OACDC,EAAgBC,IAAEC,QAAQC,YAASC,KAAKC,MAAMC,YAAYC,MAAO,SAAU,mBAAoB,QACnG,OACI,kBAAC,IAAWH,KAAKC,MACjB,yBAAKG,UAAU,SACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,kBACZP,IAAEQ,IAAIT,GAAe,SAACU,EAAMC,GAAP,OACtB,6BAASC,IAAKD,EAAUH,UAAU,aAChC,yBAAKA,UAAU,QACZP,IAAEY,IAAIH,EAAM,0BAA2B,OACxC,kBAAC,IAAD,CAAMF,UAAU,iBAAiBM,GAAIC,YAAWd,IAAEY,IAAIH,EAAM,MAAO,QACjE,yBAAKM,IAAKD,YAAWd,IAAEY,IAAIH,EAAM,0BAA2B,OAAQO,IAAKhB,IAAEY,IAAIH,EAAM,8BAA+B,SAGtH,yBAAKF,UAAU,aACb,4BAAQA,UAAU,eAChB,wBAAIA,UAAU,cAAa,kBAAC,IAAD,CAAMM,GAAIC,YAAWd,IAAEY,IAAIH,EAAM,MAAO,QAAST,IAAEY,IAAIH,EAAM,oBAAqB,SAE/G,yBAAKF,UAAU,gBACb,2BAAIP,IAAEY,IAAIH,EAAM,sBAAuB,QAEzC,kBAAC,IAAD,iBAAoB,EAAKL,MAAzB,CAAgCa,KAAMR,EAAMS,UAAW,sB,GAvB7CC,IAAMC","file":"component---src-templates-blog-js-4818d64c31d86c956eea.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport {getPages, Link, withPrefix} from '../utils';\nimport BlogPostFooter from '../components/BlogPostFooter';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Blog extends React.Component {\n    render() {\n        let display_posts = _.orderBy(getPages(this.props.pageContext.pages, '/blog'), 'frontmatter.date', 'desc');\n        return (\n            <Layout {...this.props}>\n            <div className=\"outer\">\n              <div className=\"inner\">\n                <div className=\"grid post-feed\">\n                  {_.map(display_posts, (post, post_idx) => (\n                  <article key={post_idx} className=\"cell post\">\n                    <div className=\"card\">\n                      {_.get(post, 'frontmatter.thumb_image', null) && (\n                      <Link className=\"post-thumbnail\" to={withPrefix(_.get(post, 'url', null))}>\n                        <img src={withPrefix(_.get(post, 'frontmatter.thumb_image', null))} alt={_.get(post, 'frontmatter.thumb_image_alt', null)} />\n                      </Link>\n                      )}\n                      <div className=\"post-body\">\n                        <header className=\"post-header\">\n                          <h2 className=\"post-title\"><Link to={withPrefix(_.get(post, 'url', null))}>{_.get(post, 'frontmatter.title', null)}</Link></h2>\n                        </header>\n                        <div className=\"post-excerpt\">\n                          <p>{_.get(post, 'frontmatter.excerpt', null)}</p>\n                        </div>\n                        <BlogPostFooter {...this.props} page={post} date_type={'short'} />\n                      </div>\n                    </div>\n                  </article>\n                  ))}\n                </div>\n              </div>\n            </div>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}