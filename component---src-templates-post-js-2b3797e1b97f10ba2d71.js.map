{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["query","Post","render","this","props","className","_","get","htmlToReact","src","withPrefix","alt","page","pageContext","date_type","React","Component"],"mappings":"8QAUO,IAAMA,EAAK,aAQGC,E,gLACjBC,OAAA,WACI,OACI,kBAAC,IAAWC,KAAKC,MACjB,yBAAKC,UAAU,SACb,yBAAKA,UAAU,gBACb,6BAASA,UAAU,kBACjB,4BAAQA,UAAU,eAChB,wBAAIA,UAAU,cAAcC,IAAEC,IAAIJ,KAAKC,MAAO,gCAAiC,OAC9EE,IAAEC,IAAIJ,KAAKC,MAAO,mCAAoC,OACvD,yBAAKC,UAAU,iBACZG,YAAYF,IAAEC,IAAIJ,KAAKC,MAAO,mCAAoC,SAItEE,IAAEC,IAAIJ,KAAKC,MAAO,gCAAiC,OACpD,yBAAKC,UAAU,cACb,yBAAKI,IAAKC,YAAWJ,IAAEC,IAAIJ,KAAKC,MAAO,gCAAiC,OAAQO,IAAKL,IAAEC,IAAIJ,KAAKC,MAAO,oCAAqC,SAG9I,yBAAKC,UAAU,gBACZG,YAAYF,IAAEC,IAAIJ,KAAKC,MAAO,mBAAoB,QAErD,kBAAC,IAAD,iBAAoBD,KAAKC,MAAzB,CAAgCQ,KAAMT,KAAKC,MAAMS,YAAaC,UAAW,e,GAvBzDC,IAAMC","file":"component---src-templates-post-js-2b3797e1b97f10ba2d71.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport {htmlToReact, withPrefix} from '../utils';\nimport BlogPostFooter from '../components/BlogPostFooter';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Post extends React.Component {\n    render() {\n        return (\n            <Layout {...this.props}>\n            <div className=\"outer\">\n              <div className=\"inner-medium\">\n                <article className=\"post post-full\">\n                  <header className=\"post-header\">\n                    <h1 className=\"post-title\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                    {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                    <div className=\"post-subtitle\">\n                      {htmlToReact(_.get(this.props, 'pageContext.frontmatter.subtitle', null))}\n                    </div>\n                    )}\n                  </header>\n                  {_.get(this.props, 'pageContext.frontmatter.image', null) && (\n                  <div className=\"post-image\">\n                    <img src={withPrefix(_.get(this.props, 'pageContext.frontmatter.image', null))} alt={_.get(this.props, 'pageContext.frontmatter.image_alt', null)} />\n                  </div>\n                  )}\n                  <div className=\"post-content\">\n                    {htmlToReact(_.get(this.props, 'pageContext.html', null))}\n                  </div>\n                  <BlogPostFooter {...this.props} page={this.props.pageContext} date_type={'long'} />\n                </article>\n              </div>\n            </div>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}